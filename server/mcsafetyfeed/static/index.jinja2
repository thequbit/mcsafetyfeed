<!DOCTYPE HTML>

<!--
  Theory by TEMPLATED
  templated.co @templatedco
  Released for free under the Creative Commons Attribution 3.0 license (templated.co/license)
-->

<html>

  <head>
    <title>MCSafetyFeed</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="static/thirdparty/templated-theory/assets/css/main.css" />
    <link rel="stylesheet" href="static/thirdparty/tingle-master/dist/tingle.min.css" />
    
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css" />

    <style>

      article {
        margin-top: 1rem;
      }

      .right {
        float: right;
      }

      h2 {
        margin-top: 1rem;
      }

      #table-loading {
        padding-top: 3rem;
        width: 100%;
        margin: auto;
      }

      #current-calls-table {
        display: none;
      }

      #current-dispatches-map {
        height: 28rem; 
        width: 100%;
        margin: auto;
      }

      .tingle-modal {
        /* this is to get above the leaflet atrib div */
        z-index: 10000;
      }

      @media screen and (max-width: 800px) {

        #current-calls-table-wrapper {
          display: none;
        }

      }

      @media screen and (min-width: 800px) {

        #current-calls-list-wrapper {
          display: none;
        }

      }
     
    </style>

  </head>
  <body class="subpage">

    <!-- Header -->
      <header id="header">
        <div class="inner">
          <a href="index.html" class="logo">MCSafetyFeed</a>
          <nav id="nav">
            <a href="/">Home</a>
            <!--
            <a href="/current_calls.html">Current Calls</a>
            <a href="/call_history.html">Call History</a>
            <a href="/address_search.html">Address Search</a>
            -->
          </nav>
          <a href="#navPanel" class="navPanelToggle"><span class="fa fa-bars"></span></a>
        </div>
      </header>

    <!-- Banner -->
      <section id="banner">
        <h1>Monroe County, NY Safety Feed</h1>
        <p>An unofficial 911 call collator for the Rochester, NY region</p>
      </section>

    <!-- Info -->
    <section>
      <div class="inner">
        <!--<h2><b>Active 911 dispatches within Monroe County, NY</b></h2>-->
        <div class="flex flex-1">
          <!--<article>-->
            <h2>Public Safety Feed</h2>
            <p>
              Below are a list of the currently <i>active</i> dispatches within the county.
              This list is generated using a Public Safety
              <a href="https://www2.monroecounty.gov/safety-911.php">RSS Feed</a> that is 
              provided by the county.  The RSS feed is a snap-shot in time of the current
              dispatches and their status.  This website creates a history of this information.
            </p>
            <p>
              Click on a marker on the map for more information, or on a dispatch within the 
              table below.  Date and time information will be displayed for when a dispatch 
              has changed state, as well as what agency is responding to the dispatch.
            </p>
          <!--</article>
          <article>
            <h3>History and Search</h3>
            <p>
              
            </p>
            <a class="button special right">Search</a>
            <a class="button special">History</a>
          </article>-->
        </div>
      </div>
    </section>    

    <!-- Map -->
    <section>
      <div class="inner">
        <div class="flex flex-1">
          <h2>Map of Current Dispatches</h2>
          <div id="current-dispatches-map"></div>
        </div>
      </div>
    </section>

    <!-- Table -->
      <section>
        <div class="inner">
          <div class="flex flex-1">
            <h2>List of Current Dispatches</h2>
            <div id="table-loading">
              <center>
                <img src="media/ajax-loader.gif"></img><br/><br/>
                Loading ...
              </center>
            </div>
            <div>
              <b><i>Click on a dispach to display more information</i></b><br/><br/>
              <div id="current-calls-table-wrapper">
                <table id="current-calls-table">
                  <thead>
                    <tr>
                      <th>Time</th>
                      <th>Call Type</th>
                      <th>Address</th>
                      <th>Status</th>
                      <th>Agency</th>
                      <!--<th>ID</th>-->
                    </tr>
                  </thead>
                  <tbody id="current-calls-tbody">
                  
                  </tbody>
                </table>
              </div>
              <div id="current-calls-list-wrapper">
              hi there.
              </div>
            </div>
          </div>
        </div>
      </section>

      <div id="dispatch-details-modal" class="modal">
            
      </div>

    <!-- Scripts -->
      <script src="static/thirdparty/templated-theory/assets/js/jquery.min.js"></script>
      <script src="static/thirdparty/templated-theory/assets/js/skel.min.js"></script>
      <script src="static/thirdparty/templated-theory/assets/js/util.js"></script>
      <script src="static/thirdparty/templated-theory/assets/js/main.js"></script>

      <script src="static/thirdparty/tingle-master/dist/tingle.min.js"></script>

      <script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>

      <script>

      var lut = {
        DISPATCHED: 'red',
        WAITING: 'orange',
        ENROUTE: 'yellow',
        ONSCENE: 'green',
        CLOSED: 'gray',
      }

      var dispatches = [];

      function parseUTCDateTime(dt) {
        
        var ret_str = ' - ';

        if ( dt ) {

          //dt_str = dt.replace(' ', '<br/>');
          var d = dt.split(' ')[0]
          var t = dt.split(' ')[1]

          var year = d.split('-')[0];
          var month = d.split('-')[1];
          var day = d.split('-')[2];

          var hour = t.split(':')[0];
          var minute = t.split(':')[1];
          var second = t.split(':')[2];

          dt_str = month + '/' + day + '/' + year + ' ' + hour + ':' + minute + ':' + second + ' UTC';

          var _date = new Date(dt_str);

          //ret_str = _date.toLocaleString().replace(', ', '<br/>');
          ret_str = _date.toLocaleString();

          //console.log(dt, ret_str);

        }

        if ( ret_str == null || ret_str == 'null' ) {
          ret_str = ' - ';
        }

        return ret_str;
      }

      
      var map = L.map(
        'current-dispatches-map',
        {
          // options here
        },
      ).setView([43.155, -77.610924], 10);

      // create the tile layer with correct attribution
      var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
      var osmAttrib='Map data Â© <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';
      var osm = new L.TileLayer(osmUrl, {minZoom: 9, maxZoom: 16, attribution: osmAttrib}); 

      map.addLayer(osm);

      // this taken from the 20m county
      // geojson provided here:
      //  http://eric.clst.org/tech/usgeojson/
      var monroe_county_geojson = {
        "type": "FeatureCollection",
        "features": [
          { "type": "Feature", "properties": { "GEO_ID": "0500000US36055", "STATE": "36", "COUNTY": "055", "NAME": "Monroe", "LSAD": "County", "CENSUSAREA": 657.205000 }, "geometry": { "type": "Polygon", "coordinates": [ [ [ -77.995591, 43.365293 ], [ -77.994838, 43.365259 ], [ -77.976438, 43.369159 ], [ -77.965238, 43.368059 ], [ -77.952937, 43.363460 ], [ -77.922736, 43.356960 ], [ -77.904836, 43.356960 ], [ -77.875335, 43.349660 ], [ -77.816533, 43.343560 ], [ -77.797381, 43.339857 ], [ -77.785132, 43.339261 ], [ -77.760231, 43.341161 ], [ -77.756931, 43.337361 ], [ -77.730630, 43.330161 ], [ -77.714129, 43.323561 ], [ -77.701429, 43.308261 ], [ -77.660359, 43.282998 ], [ -77.653759, 43.279484 ], [ -77.628315, 43.271303 ], [ -77.602161, 43.256949 ], [ -77.577223, 43.243263 ], [ -77.551022, 43.235763 ], [ -77.534184, 43.234569 ], [ -77.500920, 43.250363 ], [ -77.476642, 43.254522 ], [ -77.436831, 43.265701 ], [ -77.414516, 43.269263 ], [ -77.391015, 43.276363 ], [ -77.385388, 43.276847 ], [ -77.376038, 43.277652 ], [ -77.374351, 43.152584 ], [ -77.371478, 43.034696 ], [ -77.485418, 43.034564 ], [ -77.482517, 42.943164 ], [ -77.580377, 42.943963 ], [ -77.732378, 42.945285 ], [ -77.730957, 42.988372 ], [ -77.909832, 42.987762 ], [ -77.951044, 43.039544 ], [ -77.905934, 43.133561 ], [ -77.997290, 43.132981 ], [ -77.995723, 43.284963 ], [ -77.995665, 43.287448 ], [ -77.995591, 43.365293 ] ] ] } }
         ]
      }
      L.geoJSON(
        monroe_county_geojson, 
        {
          style: {
            fillOpacity:0.0
          }
        } 
      ).addTo(map);

      $.ajax({
        url: 'api/v1/dispatches?current_status=!CLOSED',
        method:'GET',
        success: function(resp) {
          //console.log('SUCCESS');
          //console.log(resp);

          dispatches = resp.collection;

          table_html = '';
          list_html = '';
          for(var i=0;i<resp.collection.length;i++) {
            var dispatch = resp.collection[i];
            
            table_html += '<tr id="' + dispatch.id + '" class="dispatch-row">';
            table_html += '<td>' + parseUTCDateTime(dispatch.creation_datetime_utc).replace(', ','<br/>') + '</td>';
            table_html += '<td>' + dispatch.call_type.title + '</td>';
            table_html += '<td>' + dispatch.address.raw_address + '</td>';
            table_html += '<td>' + dispatch.current_status + '</td>';
            table_html += '<td>' + dispatch.agency.full_name + '</td>';
            //html += '<td>' + dispatch.dispatch_unique + '</td>';
            table_html += '</tr>';

            list_html += ''

            if ( dispatch.address.lat != null ) {
              var marker = L.marker([dispatch.address.lat, dispatch.address.lng], {dispatch_id: dispatch.id} ).addTo(map);

              marker.on('click', function(e) {
                
                var that = this;

                $.ajax({
                  url: 'api/v1/dispatches/' + e.target.options.dispatch_id,
                  method: 'GET',
                  success: function(resp) {

                    var _dispatch = resp;

                    var _html = '';
                    /*
                    _html += '<b>' + dispatch.call_type.title + '</b><br/><hr>';
                    _html += 'Date/Time: ' +  dispatch.creation_datetime_utc + '<br/>';
                    _html += 'Dispatch Address: ' +  dispatch.address.raw_address + '<br/>';
                    _html += 'Current Status: ' +  dispatch.current_status + '<br/>';
                    _html += 'Responding Agency: ' +  dispatch.agency.full_name + '<br/>';*/
                    _html += '<b style="font-size: 130%;">' + _dispatch.call_type.title + '</b><br/>';
                    _html += '<b style="font-size: 100%;">' + _dispatch.agency.full_name + '</b><br/>';
                    _html += '<i style="font-size: 100%;">' + _dispatch.address.raw_address + '</i><br/><br/>';
                    _html += 'Current Status: <b>' + _dispatch.current_status + '</b><br/><br/>';
                    _html += '<table>';
                    _html += '<thead>';
                    _html += '<tr>';
                    _html += '<th>Status</th>';
                    _html += '<th>Time</th>';
                    _html += '</tr>';
                    _html += '</thead>';
                    _html += '<tbody>';
                    _html += '<tr><td>Dispatch</td><td>' + parseUTCDateTime(_dispatch.dispatched_datetime_utc) + '</td></tr>';
                    _html += '<tr><td>Waiting</td><td>' + parseUTCDateTime(_dispatch.waiting_datetime_utc) + '</td></tr>';
                    _html += '<tr><td>Enroute</td><td>' + parseUTCDateTime(_dispatch.enroute_datetime_utc) + '</td></tr>';
                    _html += '<tr><td>On Scene</td><td>' + parseUTCDateTime(_dispatch.onscene_datetime_utc) + '</td></tr>';
                    //_html += '<tr><td>Closed</td><td>' + parseUTCDateTime(dispatch.closed_datetime_utc) + '</td></tr>';
                    _html += '</tr>';
                    _html += '</tbody>';
                    _html += '</table>';

                    that.bindPopup(_html).openPopup();

                  },
                  error: function(resp) {

                  }

                });

              });

              //marker.bindPopup(_html);
            }

          }
          $('#current-calls-tbody').html(table_html);
          $('#current-calls-list').html(list_html);
          $('#table-loading').hide();
          $('#current-calls-table').show();

          $('.dispatch-row').off('click');
          $('.dispatch-row').on('click', function() {
            
            //var index = parseInt($(this).prop('id').split('dispatch-index-')[1]);
            //var dispatch = dispatches[index];

            var id = $(this).prop('id');

            $.ajax({
                url: 'api/v1/dispatches/' + id,
                method: 'GET',
                success: function(resp) {

                  //console.log(resp);

                  html = '';
                  html += '<h2>Dispatch Details</h2>';
                  html += '</hr>'
                  html += '<table><tbody>';
                  
                  html += '<tr><td>ID</td><td>' + dispatch.dispatch_unique + '</td></tr>';

                  html += '<tr><td>Agency</td><td>' + dispatch.agency.title + '</td></tr>';

                  html += '<tr><td>Call Type</td><td>' + dispatch.call_type.title + '</td></tr>';
                  html += '<tr><td>Dispatch Address</td><td>' + dispatch.address.raw_address + '</td></tr>';

                  html += '<tr><td>Dispatch Date/Time</td><td>' + parseUTCDateTime(dispatch.dispatched_datetime_utc) + '</td></tr>';
                  html += '<tr><td>Waiting Date/Time</td><td>' + parseUTCDateTime(dispatch.waiting_datetime_utc) + '</td></tr>';
                  html += '<tr><td>Enroute Date/Time</td><td>' + parseUTCDateTime(dispatch.enroute_datetime_utc) + '</td></tr>';
                  html += '<tr><td>On Scene Date/Time</td><td>' + parseUTCDateTime(dispatch.onscene_datetime_utc) + '</td></tr>';
                  html += '<tr><td>Closed Date/Time</td><td>' + parseUTCDateTime(dispatch.closed_datetime_utc) + '</td></tr>';
                  
                  // instanciate new modal
                  var modal = new tingle.modal({
                    footer: true,
                    stickyFooter: false,
                    //closeMethods: ['overlay', 'button', 'escape'],
                    closeMethods: ['overlay', 'escape'],
                    closeLabel: "Close",
                    //cssClass: ['custom-class-1', 'custom-class-2'],
                    onOpen: function() {
                      //console.log('modal open');
                    },
                    onClose: function() {
                      //console.log('modal closed');
                    },
                    beforeClose: function() {
                      // here's goes some logic
                      // e.g. save content before closing the modal
                      return true; // close the modal
                      //return false; // nothing happens
                    }
                  });

                  modal.setContent(html);

                  // add a button
                  modal.addFooterBtn('Close', 'tingle-btn tingle-btn--danger', function() {
                    // here goes some logic
                    modal.close();
                  });


                  modal.open();
                },
                error: function(resp) {
                  //console.log(resp);
                }

              });

          });

        },
        error: function(resp) {
          console.log('ERROR');
          console.log(resp);
        }
      });

        

      </script>


  </body>

</html>
